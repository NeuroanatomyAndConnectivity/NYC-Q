# Generated by OpenSesame 0.27.4 (Frisky Freud)
# Fri May 23 19:41:15 2014 (posix)
# <http://www.cogsci.nl/opensesame>

set foreground "white"
set subject_parity "even"
set font_size "18"
set description "Default description"
set title "New experiment"
set font_family "mono"
set font_bold "no"
set coordinates "relative"
set height "768"
set mouse_backend "legacy"
set start "experiment"
set compensation "0"
set width "1024"
set font_italic "no"
set background "black"
set sampler_backend "legacy"
set subject_nr "0"
set keyboard_backend "legacy"
set canvas_backend "legacy"
set transparent_variables "no"
set synth_backend "legacy"

define sketchpad sketchpad
	set duration "0"
	set description "Displays stimuli"
	draw rect -512 -384 1100 800 fill=1 penwidth=1 color=#919191 show_if="always"
	draw line 0 -30 0 30 penwidth=5 color=#a6a6a6 show_if="always"
	draw line -30 0 30 0 penwidth=5 color=#a6a6a6 show_if="always"

define sequence sequence
	run inline_script "always"
	run logger "always"

define sequence scans_sequence
	run sketchpad "always"
	run keyboard_response "always"
	run loop "always"

define inline_script init
	___run__
	import parallel
	p = parallel.Parallel()
	p.PPWCONTROL(p.PPRCONTROL() | (1<<5))
	__end__
	set _prepare ""
	set description "Executes Python code"

define sketchpad _sketchpad

define keyboard_response keyboard_response
	set allowed_responses "space"
	set description "Collects keyboard responses"
	set timeout "infinite"
	set flush "yes"

define sequence experiment
	run still "always"
	run init "always"
	run scans "always"
	run release "always"
	run thanks "always"

define text_display thanks
	set foreground "white"
	set font_size "18"
	set description "Presents a display consisting of text"
	set maxchar "50"
	set align "center"
	set content "Danke!"
	set background "black"
	set duration "keypress"
	set font_family "mono"

define inline_script release
	___run__
	del p
	__end__
	set _prepare ""
	set description "Executes Python code"

define logger logger
	set ignore_missing "no"
	set description "Logs experimental data"
	set auto_log "no"
	set use_quotes "no"
	log "slider_percent"
	log "question_de"
	log "question_en"
	log "question_id"
	log "scan_n"

define text_display still
	set foreground "white"
	set font_size "18"
	set description "Presents a display consisting of text"
	set maxchar "50"
	set align "center"
	set content "Jetzt bitte ganz ruhig liegen bleiben!"
	set background "black"
	set duration "keypress"
	set font_family "mono"

define inline_script inline_script
	___run__
	import numpy
	import time
	from openexp.canvas import canvas
	my_canvas = canvas(self.experiment)
	
	slider_w = 500
	slider_h = 40
	slider_x = self.get("width")/2-slider_w/2
	slider_y = self.get("height")/2-slider_h/2
	slider_fill = slider_w/2.0
	step = slider_w/2/10
	
	left_key = 4
	right_key = 6
	esc_keys = [5]
	
	lang = "de"
	
	def getOnPins(data):
		on_pins = []
		for pin_i in range(8):
			mask = numpy.uint8(1 << pin_i)
			if ~data & mask:
				on_pins.append(pin_i)
		return on_pins
	
	prev_data = 0
	
	time.sleep(0.2)
	while True:
		data = p.PPRDATA()
		if data != prev_data:
			print data
			prev_data = data
			on_pins  = getOnPins(data)
			print on_pins
			
			if  left_key in on_pins and slider_fill > 0:
				slider_fill -= step
			elif right_key in on_pins and slider_fill < slider_w:
				slider_fill += step
			if set(esc_keys).intersection(set(on_pins)):
				break
			
			my_canvas.clear()
			if lang == "en":
				my_canvas.text("During the last scan", y=slider_y-200) 
				my_canvas.text("<b>"+self.get("question_en")+"</b>", y=slider_y-100) 
				my_canvas.text("Completely did <b>not</b>U+005Cndescribe my experience", y=slider_y+100, x=slider_x)
				my_canvas.text("Completely didU+005Cndescribe my experience", y=slider_y+100, x=slider_x+slider_w)
			if lang == "de":
				my_canvas.text("WU+00E4hrend der letzten Messung", y=slider_y-200) 
				my_canvas.text("<b>"+self.get("question_de")+"</b>", y=slider_y-100) 
				my_canvas.text("Beschreibt meine GedankenU+005CnU+00FCberhaupt nicht", y=slider_y+100, x=slider_x)
				my_canvas.text("Beschreibt meine GedankenU+005CnvollstU+00E4ndig", y=slider_y+100, x=slider_x+slider_w)
			# Draw the slider frame
			my_canvas.rect(slider_x, slider_y, slider_w, slider_h)
			# Draw the slider fill
			my_canvas.rect(slider_x, slider_y, slider_fill, slider_h, fill=True)                
			# Draw the mouse cursor
			my_canvas.show()
			
	
	slider_percent = 100.0*slider_fill/slider_w     
	self.experiment.set("slider_percent", slider_percent)
	__end__
	set _prepare ""
	set description "Executes Python code"

define loop loop
	set repeat "1"
	set description "Repeatedly runs another item"
	set item "sequence"
	set column_order "question_id;question_de;question_en"
	set cycles "12"
	set order "random"
	setcycle 0 question_de "habe ich an etwas Positives gedacht."
	setcycle 0 question_en "I thought about something positive"
	setcycle 0 question_id "positive"
	setcycle 1 question_de "habe ich an etwas Negatives gedacht."
	setcycle 1 question_en "I thought about something negative "
	setcycle 1 question_id "negative"
	setcycle 2 question_de "habe ich an zukU+00FCnftige Ereignisse gedacht."
	setcycle 2 question_en "my thoughts involved future events "
	setcycle 2 question_id "future"
	setcycle 3 question_de "habe ich an vergangene Ereignisse gedacht."
	setcycle 3 question_en "my thoughts involved past events"
	setcycle 3 question_id "past"
	setcycle 4 question_de "habe ich U+00FCber mich selbst nachgedacht."
	setcycle 4 question_en "my thoughts involved myself"
	setcycle 4 question_id "myself"
	setcycle 5 question_de "habe ich an andere Menschen gedacht."
	setcycle 5 question_en "my thoughts involved other people"
	setcycle 5 question_id "people"
	setcycle 6 question_de "habe ich U+00FCber meine derzeitige Umgebung nachgedacht."
	setcycle 6 question_en "my thoughts involved my surroundings"
	setcycle 6 question_id "surrpundings"
	setcycle 7 question_de "war ich vollkommen wach."
	setcycle 7 question_en "I was fully awake"
	setcycle 7 question_id "vigilance"
	setcycle 8 question_de "hatte ich Gedanken in Form von Bildern."
	setcycle 8 question_en "my thoughts were in the form of images"
	setcycle 8 question_id "images"
	setcycle 9 question_de "hatte ich Gedanken in Form von Worten."
	setcycle 9 question_en "my thoughts were in the form of words"
	setcycle 9 question_id "words"
	setcycle 10 question_de "waren meine Gedanken eher spezifisch als vage."
	setcycle 10 question_en "my thoughts were more specific than vague"
	setcycle 10 question_id "specific_vague"
	setcycle 11 question_de "waren meine Gedanken aufdringlich/eindringlich."
	setcycle 11 question_en "my thoughts were intrusive"
	setcycle 11 question_id "intrusive"
	run sequence

define loop scans
	set repeat "1"
	set description "Repeatedly runs another item"
	set item "scans_sequence"
	set column_order "scan_n"
	set cycles "4"
	set order "sequential"
	setcycle 0 scan_n "1"
	setcycle 1 scan_n "2"
	setcycle 2 scan_n "3"
	setcycle 3 scan_n "4"
	run scans_sequence

